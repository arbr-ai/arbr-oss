/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.`public`.tables.records


import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class IndexedResourceRecord private constructor() : UpdatableRecordImpl<IndexedResourceRecord>(com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE), Record5<Long?, Long?, String?, JSONB?, JSONB?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var creationTimestamp: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var schemaId: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var resourceObject: JSONB
        set(value): Unit = set(3, value)
        get(): JSONB = get(3) as JSONB

    open var chatMessages: JSONB?
        set(value): Unit = set(4, value)
        get(): JSONB? = get(4) as JSONB?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Long?, Long?, String?, JSONB?, JSONB?> = super.fieldsRow() as Row5<Long?, Long?, String?, JSONB?, JSONB?>
    override fun valuesRow(): Row5<Long?, Long?, String?, JSONB?, JSONB?> = super.valuesRow() as Row5<Long?, Long?, String?, JSONB?, JSONB?>
    override fun field1(): Field<Long?> = com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE.ID
    override fun field2(): Field<Long?> = com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE.CREATION_TIMESTAMP
    override fun field3(): Field<String?> = com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE.SCHEMA_ID
    override fun field4(): Field<JSONB?> = com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE.RESOURCE_OBJECT
    override fun field5(): Field<JSONB?> = com.arbr.db.`public`.tables.IndexedResource.INDEXED_RESOURCE.CHAT_MESSAGES
    override fun component1(): Long? = id
    override fun component2(): Long = creationTimestamp
    override fun component3(): String = schemaId
    override fun component4(): JSONB = resourceObject
    override fun component5(): JSONB? = chatMessages
    override fun value1(): Long? = id
    override fun value2(): Long = creationTimestamp
    override fun value3(): String = schemaId
    override fun value4(): JSONB = resourceObject
    override fun value5(): JSONB? = chatMessages

    override fun value1(value: Long?): IndexedResourceRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): IndexedResourceRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): IndexedResourceRecord {
        set(2, value)
        return this
    }

    override fun value4(value: JSONB?): IndexedResourceRecord {
        set(3, value)
        return this
    }

    override fun value5(value: JSONB?): IndexedResourceRecord {
        set(4, value)
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: JSONB?, value5: JSONB?): IndexedResourceRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised IndexedResourceRecord
     */
    constructor(id: Long? = null, creationTimestamp: Long, schemaId: String, resourceObject: JSONB, chatMessages: JSONB? = null): this() {
        this.id = id
        this.creationTimestamp = creationTimestamp
        this.schemaId = schemaId
        this.resourceObject = resourceObject
        this.chatMessages = chatMessages
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised IndexedResourceRecord
     */
    constructor(value: com.arbr.db.`public`.tables.pojos.IndexedResource?): this() {
        if (value != null) {
            this.id = value.id
            this.creationTimestamp = value.creationTimestamp
            this.schemaId = value.schemaId
            this.resourceObject = value.resourceObject
            this.chatMessages = value.chatMessages
            resetChangedOnNotNull()
        }
    }
}
