/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.datasets.keys


import com.arbr.db.datasets.tables.GithubCommit
import com.arbr.db.datasets.tables.GithubCommitFile
import com.arbr.db.datasets.tables.GithubCommitInnerCommit
import com.arbr.db.datasets.tables.GithubCommitStats
import com.arbr.db.datasets.tables.GithubFileParseRuleContext
import com.arbr.db.datasets.tables.GithubFileParseTerminalNode
import com.arbr.db.datasets.tables.GithubFileParseToken
import com.arbr.db.datasets.tables.GithubFileParseTreeNode
import com.arbr.db.datasets.tables.GithubFileReference
import com.arbr.db.datasets.tables.GithubPullRequest
import com.arbr.db.datasets.tables.GithubRepo
import com.arbr.db.datasets.tables.GithubRepoOwner
import com.arbr.db.datasets.tables.records.GithubCommitFileRecord
import com.arbr.db.datasets.tables.records.GithubCommitInnerCommitRecord
import com.arbr.db.datasets.tables.records.GithubCommitRecord
import com.arbr.db.datasets.tables.records.GithubCommitRecordRecord
import com.arbr.db.datasets.tables.records.GithubCommitStatsRecord
import com.arbr.db.datasets.tables.records.GithubFileParseRuleContextRecord
import com.arbr.db.datasets.tables.records.GithubFileParseTerminalNodeRecord
import com.arbr.db.datasets.tables.records.GithubFileParseTokenRecord
import com.arbr.db.datasets.tables.records.GithubFileParseTreeNodeRecord
import com.arbr.db.datasets.tables.records.GithubFileReferenceRecord
import com.arbr.db.datasets.tables.records.GithubPullRequestRecord
import com.arbr.db.datasets.tables.records.GithubPullRequestRecordRecord
import com.arbr.db.datasets.tables.records.GithubRepoOwnerRecord
import com.arbr.db.datasets.tables.records.GithubRepoRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val GITHUB_COMMIT_PKEY: UniqueKey<GithubCommitRecord> = Internal.createUniqueKey(GithubCommit.GITHUB_COMMIT, DSL.name("github_commit_pkey"), arrayOf(GithubCommit.GITHUB_COMMIT.SHA), true)
val GITHUB_FILE_PARSE_RULE_CONTEXT_PKEY: UniqueKey<GithubFileParseRuleContextRecord> = Internal.createUniqueKey(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT, DSL.name("github_file_parse_rule_context_pkey"), arrayOf(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT.ID), true)
val GITHUB_FILE_PARSE_TERMINAL_NODE_PKEY: UniqueKey<GithubFileParseTerminalNodeRecord> = Internal.createUniqueKey(GithubFileParseTerminalNode.GITHUB_FILE_PARSE_TERMINAL_NODE, DSL.name("github_file_parse_terminal_node_pkey"), arrayOf(GithubFileParseTerminalNode.GITHUB_FILE_PARSE_TERMINAL_NODE.ID), true)
val GITHUB_FILE_PARSE_TOKEN_PKEY: UniqueKey<GithubFileParseTokenRecord> = Internal.createUniqueKey(GithubFileParseToken.GITHUB_FILE_PARSE_TOKEN, DSL.name("github_file_parse_token_pkey"), arrayOf(GithubFileParseToken.GITHUB_FILE_PARSE_TOKEN.ID), true)
val GITHUB_FILE_PARSE_TREE_NODE_PKEY: UniqueKey<GithubFileParseTreeNodeRecord> = Internal.createUniqueKey(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE, DSL.name("github_file_parse_tree_node_pkey"), arrayOf(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE.ID), true)
val GITHUB_FILE_REFERENCE_PKEY: UniqueKey<GithubFileReferenceRecord> = Internal.createUniqueKey(GithubFileReference.GITHUB_FILE_REFERENCE, DSL.name("github_file_reference_pkey"), arrayOf(GithubFileReference.GITHUB_FILE_REFERENCE.ID), true)
val GITHUB_PULL_REQUEST_PKEY: UniqueKey<GithubPullRequestRecord> = Internal.createUniqueKey(GithubPullRequest.GITHUB_PULL_REQUEST, DSL.name("github_pull_request_pkey"), arrayOf(GithubPullRequest.GITHUB_PULL_REQUEST.ID), true)
val GITHUB_REPO_PKEY: UniqueKey<GithubRepoRecord> = Internal.createUniqueKey(GithubRepo.GITHUB_REPO, DSL.name("github_repo_pkey"), arrayOf(GithubRepo.GITHUB_REPO.ID), true)
val GITHUB_REPO_OWNER_PKEY: UniqueKey<GithubRepoOwnerRecord> = Internal.createUniqueKey(GithubRepoOwner.GITHUB_REPO_OWNER, DSL.name("github_repo_owner_pkey"), arrayOf(GithubRepoOwner.GITHUB_REPO_OWNER.LOGIN), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val GITHUB_COMMIT__GITHUB_COMMIT_PULL_REQUEST_ID_FKEY: ForeignKey<GithubCommitRecord, GithubPullRequestRecord> = Internal.createForeignKey(GithubCommit.GITHUB_COMMIT, DSL.name("github_commit_pull_request_id_fkey"), arrayOf(GithubCommit.GITHUB_COMMIT.PULL_REQUEST_ID), com.arbr.db.datasets.keys.GITHUB_PULL_REQUEST_PKEY, arrayOf(GithubPullRequest.GITHUB_PULL_REQUEST.ID), true)
val GITHUB_COMMIT_FILE__GITHUB_COMMIT_FILE_COMMIT_INFO_SHA_FKEY: ForeignKey<GithubCommitFileRecord, GithubCommitRecord> = Internal.createForeignKey(GithubCommitFile.GITHUB_COMMIT_FILE, DSL.name("github_commit_file_commit_info_sha_fkey"), arrayOf(GithubCommitFile.GITHUB_COMMIT_FILE.COMMIT_INFO_SHA), com.arbr.db.datasets.keys.GITHUB_COMMIT_PKEY, arrayOf(GithubCommit.GITHUB_COMMIT.SHA), true)
val GITHUB_COMMIT_INNER_COMMIT__GITHUB_COMMIT_INNER_COMMIT_COMMIT_INFO_SHA_FKEY: ForeignKey<GithubCommitInnerCommitRecord, GithubCommitRecord> = Internal.createForeignKey(GithubCommitInnerCommit.GITHUB_COMMIT_INNER_COMMIT, DSL.name("github_commit_inner_commit_commit_info_sha_fkey"), arrayOf(GithubCommitInnerCommit.GITHUB_COMMIT_INNER_COMMIT.COMMIT_INFO_SHA), com.arbr.db.datasets.keys.GITHUB_COMMIT_PKEY, arrayOf(GithubCommit.GITHUB_COMMIT.SHA), true)
val GITHUB_COMMIT_RECORD__GITHUB_COMMIT_RECORD_COMMIT_INFO_SHA_FKEY: ForeignKey<GithubCommitRecordRecord, GithubCommitRecord> = Internal.createForeignKey(com.arbr.db.datasets.tables.GithubCommitRecord.GITHUB_COMMIT_RECORD, DSL.name("github_commit_record_commit_info_sha_fkey"), arrayOf(com.arbr.db.datasets.tables.GithubCommitRecord.GITHUB_COMMIT_RECORD.COMMIT_INFO_SHA), com.arbr.db.datasets.keys.GITHUB_COMMIT_PKEY, arrayOf(GithubCommit.GITHUB_COMMIT.SHA), true)
val GITHUB_COMMIT_RECORD__GITHUB_COMMIT_RECORD_PULL_REQUEST_ID_FKEY: ForeignKey<GithubCommitRecordRecord, GithubPullRequestRecord> = Internal.createForeignKey(com.arbr.db.datasets.tables.GithubCommitRecord.GITHUB_COMMIT_RECORD, DSL.name("github_commit_record_pull_request_id_fkey"), arrayOf(com.arbr.db.datasets.tables.GithubCommitRecord.GITHUB_COMMIT_RECORD.PULL_REQUEST_ID), com.arbr.db.datasets.keys.GITHUB_PULL_REQUEST_PKEY, arrayOf(GithubPullRequest.GITHUB_PULL_REQUEST.ID), true)
val GITHUB_COMMIT_STATS__GITHUB_COMMIT_STATS_COMMIT_INFO_SHA_FKEY: ForeignKey<GithubCommitStatsRecord, GithubCommitRecord> = Internal.createForeignKey(GithubCommitStats.GITHUB_COMMIT_STATS, DSL.name("github_commit_stats_commit_info_sha_fkey"), arrayOf(GithubCommitStats.GITHUB_COMMIT_STATS.COMMIT_INFO_SHA), com.arbr.db.datasets.keys.GITHUB_COMMIT_PKEY, arrayOf(GithubCommit.GITHUB_COMMIT.SHA), true)
val GITHUB_FILE_PARSE_RULE_CONTEXT__GITHUB_FILE_PARSE_RULE_CONTEXT_START_TOKEN_ID_FKEY: ForeignKey<GithubFileParseRuleContextRecord, GithubFileParseTokenRecord> = Internal.createForeignKey(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT, DSL.name("github_file_parse_rule_context_start_token_id_fkey"), arrayOf(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT.START_TOKEN_ID), com.arbr.db.datasets.keys.GITHUB_FILE_PARSE_TOKEN_PKEY, arrayOf(GithubFileParseToken.GITHUB_FILE_PARSE_TOKEN.ID), true)
val GITHUB_FILE_PARSE_RULE_CONTEXT__GITHUB_FILE_PARSE_RULE_CONTEXT_STOP_TOKEN_ID_FKEY: ForeignKey<GithubFileParseRuleContextRecord, GithubFileParseTokenRecord> = Internal.createForeignKey(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT, DSL.name("github_file_parse_rule_context_stop_token_id_fkey"), arrayOf(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT.STOP_TOKEN_ID), com.arbr.db.datasets.keys.GITHUB_FILE_PARSE_TOKEN_PKEY, arrayOf(GithubFileParseToken.GITHUB_FILE_PARSE_TOKEN.ID), true)
val GITHUB_FILE_PARSE_TERMINAL_NODE__GITHUB_FILE_PARSE_TERMINAL_NODE_TOKEN_ID_FKEY: ForeignKey<GithubFileParseTerminalNodeRecord, GithubFileParseTokenRecord> = Internal.createForeignKey(GithubFileParseTerminalNode.GITHUB_FILE_PARSE_TERMINAL_NODE, DSL.name("github_file_parse_terminal_node_token_id_fkey"), arrayOf(GithubFileParseTerminalNode.GITHUB_FILE_PARSE_TERMINAL_NODE.TOKEN_ID), com.arbr.db.datasets.keys.GITHUB_FILE_PARSE_TOKEN_PKEY, arrayOf(GithubFileParseToken.GITHUB_FILE_PARSE_TOKEN.ID), true)
val GITHUB_FILE_PARSE_TREE_NODE__GITHUB_FILE_PARSE_TREE_NODE_FILE_ID_FKEY: ForeignKey<GithubFileParseTreeNodeRecord, GithubFileReferenceRecord> = Internal.createForeignKey(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE, DSL.name("github_file_parse_tree_node_file_id_fkey"), arrayOf(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE.FILE_ID), com.arbr.db.datasets.keys.GITHUB_FILE_REFERENCE_PKEY, arrayOf(GithubFileReference.GITHUB_FILE_REFERENCE.ID), true)
val GITHUB_FILE_PARSE_TREE_NODE__GITHUB_FILE_PARSE_TREE_NODE_RULE_CONTEXT_ID_FKEY: ForeignKey<GithubFileParseTreeNodeRecord, GithubFileParseRuleContextRecord> = Internal.createForeignKey(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE, DSL.name("github_file_parse_tree_node_rule_context_id_fkey"), arrayOf(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE.RULE_CONTEXT_ID), com.arbr.db.datasets.keys.GITHUB_FILE_PARSE_RULE_CONTEXT_PKEY, arrayOf(GithubFileParseRuleContext.GITHUB_FILE_PARSE_RULE_CONTEXT.ID), true)
val GITHUB_FILE_PARSE_TREE_NODE__GITHUB_FILE_PARSE_TREE_NODE_TERMINAL_NODE_ID_FKEY: ForeignKey<GithubFileParseTreeNodeRecord, GithubFileParseTerminalNodeRecord> = Internal.createForeignKey(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE, DSL.name("github_file_parse_tree_node_terminal_node_id_fkey"), arrayOf(GithubFileParseTreeNode.GITHUB_FILE_PARSE_TREE_NODE.TERMINAL_NODE_ID), com.arbr.db.datasets.keys.GITHUB_FILE_PARSE_TERMINAL_NODE_PKEY, arrayOf(GithubFileParseTerminalNode.GITHUB_FILE_PARSE_TERMINAL_NODE.ID), true)
val GITHUB_PULL_REQUEST__GITHUB_PULL_REQUEST_REPO_ID_FKEY: ForeignKey<GithubPullRequestRecord, GithubRepoRecord> = Internal.createForeignKey(GithubPullRequest.GITHUB_PULL_REQUEST, DSL.name("github_pull_request_repo_id_fkey"), arrayOf(GithubPullRequest.GITHUB_PULL_REQUEST.REPO_ID), com.arbr.db.datasets.keys.GITHUB_REPO_PKEY, arrayOf(GithubRepo.GITHUB_REPO.ID), true)
val GITHUB_PULL_REQUEST_RECORD__GITHUB_PULL_REQUEST_RECORD_PULL_REQUEST_ID_FKEY: ForeignKey<GithubPullRequestRecordRecord, GithubPullRequestRecord> = Internal.createForeignKey(com.arbr.db.datasets.tables.GithubPullRequestRecord.GITHUB_PULL_REQUEST_RECORD, DSL.name("github_pull_request_record_pull_request_id_fkey"), arrayOf(com.arbr.db.datasets.tables.GithubPullRequestRecord.GITHUB_PULL_REQUEST_RECORD.PULL_REQUEST_ID), com.arbr.db.datasets.keys.GITHUB_PULL_REQUEST_PKEY, arrayOf(GithubPullRequest.GITHUB_PULL_REQUEST.ID), true)
val GITHUB_REPO__GITHUB_REPO_OWNER_LOGIN_FKEY: ForeignKey<GithubRepoRecord, GithubRepoOwnerRecord> = Internal.createForeignKey(GithubRepo.GITHUB_REPO, DSL.name("github_repo_owner_login_fkey"), arrayOf(GithubRepo.GITHUB_REPO.OWNER_LOGIN), com.arbr.db.datasets.keys.GITHUB_REPO_OWNER_PKEY, arrayOf(GithubRepoOwner.GITHUB_REPO_OWNER.LOGIN), true)
