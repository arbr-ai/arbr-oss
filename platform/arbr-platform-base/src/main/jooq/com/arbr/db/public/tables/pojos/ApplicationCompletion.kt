/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.`public`.tables.pojos


import java.io.Serializable

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class ApplicationCompletion(
    val cacheKey: String,
    val creationTimestamp: Long,
    val applicationId: String,
    val exampleVectorIds: JSONB,
    val inputVectorIds: JSONB,
    val inputResource: JSONB,
    val outputResource: JSONB,
    val promptMessages: JSONB,
    val completionMessages: JSONB? = null,
    val workflowId: Long? = null,
    val usedModel: String? = null,
    val promptTokens: Long? = null,
    val completionTokens: Long? = null,
    val totalTokens: Long? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: ApplicationCompletion = other as ApplicationCompletion
        if (this.cacheKey != o.cacheKey)
            return false
        if (this.creationTimestamp != o.creationTimestamp)
            return false
        if (this.applicationId != o.applicationId)
            return false
        if (this.exampleVectorIds != o.exampleVectorIds)
            return false
        if (this.inputVectorIds != o.inputVectorIds)
            return false
        if (this.inputResource != o.inputResource)
            return false
        if (this.outputResource != o.outputResource)
            return false
        if (this.promptMessages != o.promptMessages)
            return false
        if (this.completionMessages == null) {
            if (o.completionMessages != null)
                return false
        }
        else if (this.completionMessages != o.completionMessages)
            return false
        if (this.workflowId == null) {
            if (o.workflowId != null)
                return false
        }
        else if (this.workflowId != o.workflowId)
            return false
        if (this.usedModel == null) {
            if (o.usedModel != null)
                return false
        }
        else if (this.usedModel != o.usedModel)
            return false
        if (this.promptTokens == null) {
            if (o.promptTokens != null)
                return false
        }
        else if (this.promptTokens != o.promptTokens)
            return false
        if (this.completionTokens == null) {
            if (o.completionTokens != null)
                return false
        }
        else if (this.completionTokens != o.completionTokens)
            return false
        if (this.totalTokens == null) {
            if (o.totalTokens != null)
                return false
        }
        else if (this.totalTokens != o.totalTokens)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + this.cacheKey.hashCode()
        result = prime * result + this.creationTimestamp.hashCode()
        result = prime * result + this.applicationId.hashCode()
        result = prime * result + this.exampleVectorIds.hashCode()
        result = prime * result + this.inputVectorIds.hashCode()
        result = prime * result + this.inputResource.hashCode()
        result = prime * result + this.outputResource.hashCode()
        result = prime * result + this.promptMessages.hashCode()
        result = prime * result + (if (this.completionMessages == null) 0 else this.completionMessages.hashCode())
        result = prime * result + (if (this.workflowId == null) 0 else this.workflowId.hashCode())
        result = prime * result + (if (this.usedModel == null) 0 else this.usedModel.hashCode())
        result = prime * result + (if (this.promptTokens == null) 0 else this.promptTokens.hashCode())
        result = prime * result + (if (this.completionTokens == null) 0 else this.completionTokens.hashCode())
        result = prime * result + (if (this.totalTokens == null) 0 else this.totalTokens.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("ApplicationCompletion (")

        sb.append(cacheKey)
        sb.append(", ").append(creationTimestamp)
        sb.append(", ").append(applicationId)
        sb.append(", ").append(exampleVectorIds)
        sb.append(", ").append(inputVectorIds)
        sb.append(", ").append(inputResource)
        sb.append(", ").append(outputResource)
        sb.append(", ").append(promptMessages)
        sb.append(", ").append(completionMessages)
        sb.append(", ").append(workflowId)
        sb.append(", ").append(usedModel)
        sb.append(", ").append(promptTokens)
        sb.append(", ").append(completionTokens)
        sb.append(", ").append(totalTokens)

        sb.append(")")
        return sb.toString()
    }
}
