/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.datasets.tables.records


import com.arbr.db.datasets.tables.GithubCommitRecord

import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GithubCommitRecordRecord private constructor() : TableRecordImpl<GithubCommitRecordRecord>(GithubCommitRecord.GITHUB_COMMIT_RECORD), Record4<String?, Long?, Int?, JSONB?> {

    open var commitInfoSha: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var pullRequestId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var ordinal: Int
        set(value): Unit = set(2, value)
        get(): Int = get(2) as Int

    open var tags: JSONB?
        set(value): Unit = set(3, value)
        get(): JSONB? = get(3) as JSONB?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, Long?, Int?, JSONB?> = super.fieldsRow() as Row4<String?, Long?, Int?, JSONB?>
    override fun valuesRow(): Row4<String?, Long?, Int?, JSONB?> = super.valuesRow() as Row4<String?, Long?, Int?, JSONB?>
    override fun field1(): Field<String?> = GithubCommitRecord.GITHUB_COMMIT_RECORD.COMMIT_INFO_SHA
    override fun field2(): Field<Long?> = GithubCommitRecord.GITHUB_COMMIT_RECORD.PULL_REQUEST_ID
    override fun field3(): Field<Int?> = GithubCommitRecord.GITHUB_COMMIT_RECORD.ORDINAL
    override fun field4(): Field<JSONB?> = GithubCommitRecord.GITHUB_COMMIT_RECORD.TAGS
    override fun component1(): String = commitInfoSha
    override fun component2(): Long = pullRequestId
    override fun component3(): Int = ordinal
    override fun component4(): JSONB? = tags
    override fun value1(): String = commitInfoSha
    override fun value2(): Long = pullRequestId
    override fun value3(): Int = ordinal
    override fun value4(): JSONB? = tags

    override fun value1(value: String?): GithubCommitRecordRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): GithubCommitRecordRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Int?): GithubCommitRecordRecord {
        set(2, value)
        return this
    }

    override fun value4(value: JSONB?): GithubCommitRecordRecord {
        set(3, value)
        return this
    }

    override fun values(value1: String?, value2: Long?, value3: Int?, value4: JSONB?): GithubCommitRecordRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised GithubCommitRecordRecord
     */
    constructor(commitInfoSha: String, pullRequestId: Long, ordinal: Int, tags: JSONB? = null): this() {
        this.commitInfoSha = commitInfoSha
        this.pullRequestId = pullRequestId
        this.ordinal = ordinal
        this.tags = tags
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised GithubCommitRecordRecord
     */
    constructor(value: com.arbr.db.datasets.tables.pojos.GithubCommitRecord?): this() {
        if (value != null) {
            this.commitInfoSha = value.commitInfoSha
            this.pullRequestId = value.pullRequestId
            this.ordinal = value.ordinal
            this.tags = value.tags
            resetChangedOnNotNull()
        }
    }
}
