/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.datasets.tables.pojos


import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class GithubFileParseRuleContext(
    val id: Long? = null,
    val ruleIndex: Int,
    val childCount: Int,
    val startTokenId: Long? = null,
    val stopTokenId: Long? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: GithubFileParseRuleContext = other as GithubFileParseRuleContext
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.ruleIndex != o.ruleIndex)
            return false
        if (this.childCount != o.childCount)
            return false
        if (this.startTokenId == null) {
            if (o.startTokenId != null)
                return false
        }
        else if (this.startTokenId != o.startTokenId)
            return false
        if (this.stopTokenId == null) {
            if (o.stopTokenId != null)
                return false
        }
        else if (this.stopTokenId != o.stopTokenId)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.ruleIndex.hashCode()
        result = prime * result + this.childCount.hashCode()
        result = prime * result + (if (this.startTokenId == null) 0 else this.startTokenId.hashCode())
        result = prime * result + (if (this.stopTokenId == null) 0 else this.stopTokenId.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GithubFileParseRuleContext (")

        sb.append(id)
        sb.append(", ").append(ruleIndex)
        sb.append(", ").append(childCount)
        sb.append(", ").append(startTokenId)
        sb.append(", ").append(stopTokenId)

        sb.append(")")
        return sb.toString()
    }
}
