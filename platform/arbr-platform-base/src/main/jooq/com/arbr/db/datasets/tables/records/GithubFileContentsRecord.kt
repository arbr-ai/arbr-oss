/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.datasets.tables.records


import com.arbr.db.datasets.tables.GithubFileContents

import org.jooq.Field
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GithubFileContentsRecord private constructor() : TableRecordImpl<GithubFileContentsRecord>(GithubFileContents.GITHUB_FILE_CONTENTS), Record3<String?, String?, String?> {

    open var commitInfoSha: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var filename: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var contents: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<String?, String?, String?> = super.fieldsRow() as Row3<String?, String?, String?>
    override fun valuesRow(): Row3<String?, String?, String?> = super.valuesRow() as Row3<String?, String?, String?>
    override fun field1(): Field<String?> = GithubFileContents.GITHUB_FILE_CONTENTS.COMMIT_INFO_SHA
    override fun field2(): Field<String?> = GithubFileContents.GITHUB_FILE_CONTENTS.FILENAME
    override fun field3(): Field<String?> = GithubFileContents.GITHUB_FILE_CONTENTS.CONTENTS
    override fun component1(): String? = commitInfoSha
    override fun component2(): String = filename
    override fun component3(): String = contents
    override fun value1(): String? = commitInfoSha
    override fun value2(): String = filename
    override fun value3(): String = contents

    override fun value1(value: String?): GithubFileContentsRecord {
        set(0, value)
        return this
    }

    override fun value2(value: String?): GithubFileContentsRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): GithubFileContentsRecord {
        set(2, value)
        return this
    }

    override fun values(value1: String?, value2: String?, value3: String?): GithubFileContentsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised GithubFileContentsRecord
     */
    constructor(commitInfoSha: String? = null, filename: String, contents: String): this() {
        this.commitInfoSha = commitInfoSha
        this.filename = filename
        this.contents = contents
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised GithubFileContentsRecord
     */
    constructor(value: com.arbr.db.datasets.tables.pojos.GithubFileContents?): this() {
        if (value != null) {
            this.commitInfoSha = value.commitInfoSha
            this.filename = value.filename
            this.contents = value.contents
            resetChangedOnNotNull()
        }
    }
}
