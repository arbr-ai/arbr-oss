/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.`public`.tables.pojos


import java.io.Serializable

import org.jooq.JSONB


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class UserProjectWorkflow(
    val id: Long? = null,
    val projectId: Long,
    val creationTimestamp: Long,
    val workflowType: String,
    val lastStatus: Int,
    val lastStatusRecordedTimestamp: Long,
    val planInfo: JSONB,
    val commitInfo: JSONB,
    val requestedUserInputs: JSONB,
    val valuedUserInputs: JSONB,
    val buildArtifacts: JSONB,
    val paramMap: JSONB? = null,
    val idempotencyKey: String? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: UserProjectWorkflow = other as UserProjectWorkflow
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.projectId != o.projectId)
            return false
        if (this.creationTimestamp != o.creationTimestamp)
            return false
        if (this.workflowType != o.workflowType)
            return false
        if (this.lastStatus != o.lastStatus)
            return false
        if (this.lastStatusRecordedTimestamp != o.lastStatusRecordedTimestamp)
            return false
        if (this.planInfo != o.planInfo)
            return false
        if (this.commitInfo != o.commitInfo)
            return false
        if (this.requestedUserInputs != o.requestedUserInputs)
            return false
        if (this.valuedUserInputs != o.valuedUserInputs)
            return false
        if (this.buildArtifacts != o.buildArtifacts)
            return false
        if (this.paramMap == null) {
            if (o.paramMap != null)
                return false
        }
        else if (this.paramMap != o.paramMap)
            return false
        if (this.idempotencyKey == null) {
            if (o.idempotencyKey != null)
                return false
        }
        else if (this.idempotencyKey != o.idempotencyKey)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.projectId.hashCode()
        result = prime * result + this.creationTimestamp.hashCode()
        result = prime * result + this.workflowType.hashCode()
        result = prime * result + this.lastStatus.hashCode()
        result = prime * result + this.lastStatusRecordedTimestamp.hashCode()
        result = prime * result + this.planInfo.hashCode()
        result = prime * result + this.commitInfo.hashCode()
        result = prime * result + this.requestedUserInputs.hashCode()
        result = prime * result + this.valuedUserInputs.hashCode()
        result = prime * result + this.buildArtifacts.hashCode()
        result = prime * result + (if (this.paramMap == null) 0 else this.paramMap.hashCode())
        result = prime * result + (if (this.idempotencyKey == null) 0 else this.idempotencyKey.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("UserProjectWorkflow (")

        sb.append(id)
        sb.append(", ").append(projectId)
        sb.append(", ").append(creationTimestamp)
        sb.append(", ").append(workflowType)
        sb.append(", ").append(lastStatus)
        sb.append(", ").append(lastStatusRecordedTimestamp)
        sb.append(", ").append(planInfo)
        sb.append(", ").append(commitInfo)
        sb.append(", ").append(requestedUserInputs)
        sb.append(", ").append(valuedUserInputs)
        sb.append(", ").append(buildArtifacts)
        sb.append(", ").append(paramMap)
        sb.append(", ").append(idempotencyKey)

        sb.append(")")
        return sb.toString()
    }
}
