/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.`public`.tables.records


import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserEventRecord private constructor() : TableRecordImpl<UserEventRecord>(com.arbr.db.`public`.tables.UserEvent.USER_EVENT), Record4<Long?, Long?, String?, JSONB?> {

    open var userId: Long
        set(value): Unit = set(0, value)
        get(): Long = get(0) as Long

    open var eventTimestamp: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var eventName: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var eventProperties: JSONB?
        set(value): Unit = set(3, value)
        get(): JSONB? = get(3) as JSONB?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<Long?, Long?, String?, JSONB?> = super.fieldsRow() as Row4<Long?, Long?, String?, JSONB?>
    override fun valuesRow(): Row4<Long?, Long?, String?, JSONB?> = super.valuesRow() as Row4<Long?, Long?, String?, JSONB?>
    override fun field1(): Field<Long?> = com.arbr.db.`public`.tables.UserEvent.USER_EVENT.USER_ID
    override fun field2(): Field<Long?> = com.arbr.db.`public`.tables.UserEvent.USER_EVENT.EVENT_TIMESTAMP
    override fun field3(): Field<String?> = com.arbr.db.`public`.tables.UserEvent.USER_EVENT.EVENT_NAME
    override fun field4(): Field<JSONB?> = com.arbr.db.`public`.tables.UserEvent.USER_EVENT.EVENT_PROPERTIES
    override fun component1(): Long = userId
    override fun component2(): Long = eventTimestamp
    override fun component3(): String = eventName
    override fun component4(): JSONB? = eventProperties
    override fun value1(): Long = userId
    override fun value2(): Long = eventTimestamp
    override fun value3(): String = eventName
    override fun value4(): JSONB? = eventProperties

    override fun value1(value: Long?): UserEventRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): UserEventRecord {
        set(1, value)
        return this
    }

    override fun value3(value: String?): UserEventRecord {
        set(2, value)
        return this
    }

    override fun value4(value: JSONB?): UserEventRecord {
        set(3, value)
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: JSONB?): UserEventRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised UserEventRecord
     */
    constructor(userId: Long, eventTimestamp: Long, eventName: String, eventProperties: JSONB? = null): this() {
        this.userId = userId
        this.eventTimestamp = eventTimestamp
        this.eventName = eventName
        this.eventProperties = eventProperties
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised UserEventRecord
     */
    constructor(value: com.arbr.db.`public`.tables.pojos.UserEvent?): this() {
        if (value != null) {
            this.userId = value.userId
            this.eventTimestamp = value.eventTimestamp
            this.eventName = value.eventName
            this.eventProperties = value.eventProperties
            resetChangedOnNotNull()
        }
    }
}
