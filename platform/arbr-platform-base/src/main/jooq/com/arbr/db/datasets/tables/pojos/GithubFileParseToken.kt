/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.datasets.tables.pojos


import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class GithubFileParseToken(
    val id: Long? = null,
    val type: Int,
    val text: String,
    val line: Int,
    val charPositionInLine: Int,
    val channel: Int,
    val tokenIndex: Int,
    val startIndex: Int,
    val stopIndex: Int,
    val locus: Int? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: GithubFileParseToken = other as GithubFileParseToken
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.type != o.type)
            return false
        if (this.text != o.text)
            return false
        if (this.line != o.line)
            return false
        if (this.charPositionInLine != o.charPositionInLine)
            return false
        if (this.channel != o.channel)
            return false
        if (this.tokenIndex != o.tokenIndex)
            return false
        if (this.startIndex != o.startIndex)
            return false
        if (this.stopIndex != o.stopIndex)
            return false
        if (this.locus == null) {
            if (o.locus != null)
                return false
        }
        else if (this.locus != o.locus)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + this.type.hashCode()
        result = prime * result + this.text.hashCode()
        result = prime * result + this.line.hashCode()
        result = prime * result + this.charPositionInLine.hashCode()
        result = prime * result + this.channel.hashCode()
        result = prime * result + this.tokenIndex.hashCode()
        result = prime * result + this.startIndex.hashCode()
        result = prime * result + this.stopIndex.hashCode()
        result = prime * result + (if (this.locus == null) 0 else this.locus.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GithubFileParseToken (")

        sb.append(id)
        sb.append(", ").append(type)
        sb.append(", ").append(text)
        sb.append(", ").append(line)
        sb.append(", ").append(charPositionInLine)
        sb.append(", ").append(channel)
        sb.append(", ").append(tokenIndex)
        sb.append(", ").append(startIndex)
        sb.append(", ").append(stopIndex)
        sb.append(", ").append(locus)

        sb.append(")")
        return sb.toString()
    }
}
