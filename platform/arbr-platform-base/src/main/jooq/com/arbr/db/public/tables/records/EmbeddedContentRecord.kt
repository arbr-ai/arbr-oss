/*
 * This file is generated by jOOQ.
 */
package com.arbr.db.`public`.tables.records


import org.jooq.Field
import org.jooq.JSONB
import org.jooq.Record1
import org.jooq.Record8
import org.jooq.Row8
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class EmbeddedContentRecord private constructor() : UpdatableRecordImpl<EmbeddedContentRecord>(com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT), Record8<Long?, Long?, Long?, String?, String?, String?, String?, JSONB?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var creationTimestamp: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var resourceId: Long
        set(value): Unit = set(2, value)
        get(): Long = get(2) as Long

    open var vectorId: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var schemaId: String
        set(value): Unit = set(4, value)
        get(): String = get(4) as String

    open var kind: String
        set(value): Unit = set(5, value)
        get(): String = get(5) as String

    open var embeddingContent: String
        set(value): Unit = set(6, value)
        get(): String = get(6) as String

    open var metadata: JSONB?
        set(value): Unit = set(7, value)
        get(): JSONB? = get(7) as JSONB?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row8<Long?, Long?, Long?, String?, String?, String?, String?, JSONB?> = super.fieldsRow() as Row8<Long?, Long?, Long?, String?, String?, String?, String?, JSONB?>
    override fun valuesRow(): Row8<Long?, Long?, Long?, String?, String?, String?, String?, JSONB?> = super.valuesRow() as Row8<Long?, Long?, Long?, String?, String?, String?, String?, JSONB?>
    override fun field1(): Field<Long?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.ID
    override fun field2(): Field<Long?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.CREATION_TIMESTAMP
    override fun field3(): Field<Long?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.RESOURCE_ID
    override fun field4(): Field<String?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.VECTOR_ID
    override fun field5(): Field<String?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.SCHEMA_ID
    override fun field6(): Field<String?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.KIND
    override fun field7(): Field<String?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.EMBEDDING_CONTENT
    override fun field8(): Field<JSONB?> = com.arbr.db.`public`.tables.EmbeddedContent.EMBEDDED_CONTENT.METADATA
    override fun component1(): Long? = id
    override fun component2(): Long = creationTimestamp
    override fun component3(): Long = resourceId
    override fun component4(): String = vectorId
    override fun component5(): String = schemaId
    override fun component6(): String = kind
    override fun component7(): String = embeddingContent
    override fun component8(): JSONB? = metadata
    override fun value1(): Long? = id
    override fun value2(): Long = creationTimestamp
    override fun value3(): Long = resourceId
    override fun value4(): String = vectorId
    override fun value5(): String = schemaId
    override fun value6(): String = kind
    override fun value7(): String = embeddingContent
    override fun value8(): JSONB? = metadata

    override fun value1(value: Long?): EmbeddedContentRecord {
        set(0, value)
        return this
    }

    override fun value2(value: Long?): EmbeddedContentRecord {
        set(1, value)
        return this
    }

    override fun value3(value: Long?): EmbeddedContentRecord {
        set(2, value)
        return this
    }

    override fun value4(value: String?): EmbeddedContentRecord {
        set(3, value)
        return this
    }

    override fun value5(value: String?): EmbeddedContentRecord {
        set(4, value)
        return this
    }

    override fun value6(value: String?): EmbeddedContentRecord {
        set(5, value)
        return this
    }

    override fun value7(value: String?): EmbeddedContentRecord {
        set(6, value)
        return this
    }

    override fun value8(value: JSONB?): EmbeddedContentRecord {
        set(7, value)
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: Long?, value4: String?, value5: String?, value6: String?, value7: String?, value8: JSONB?): EmbeddedContentRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        return this
    }

    /**
     * Create a detached, initialised EmbeddedContentRecord
     */
    constructor(id: Long? = null, creationTimestamp: Long, resourceId: Long, vectorId: String, schemaId: String, kind: String, embeddingContent: String, metadata: JSONB? = null): this() {
        this.id = id
        this.creationTimestamp = creationTimestamp
        this.resourceId = resourceId
        this.vectorId = vectorId
        this.schemaId = schemaId
        this.kind = kind
        this.embeddingContent = embeddingContent
        this.metadata = metadata
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised EmbeddedContentRecord
     */
    constructor(value: com.arbr.db.`public`.tables.pojos.EmbeddedContent?): this() {
        if (value != null) {
            this.id = value.id
            this.creationTimestamp = value.creationTimestamp
            this.resourceId = value.resourceId
            this.vectorId = value.vectorId
            this.schemaId = value.schemaId
            this.kind = value.kind
            this.embeddingContent = value.embeddingContent
            this.metadata = value.metadata
            resetChangedOnNotNull()
        }
    }
}
